@page
@model SCC.FantasyFootball.Pages.Teams.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Conference)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Division)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Createddate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Modifieddate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PagedRecords.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Conference)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Division)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Createddate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Modifieddate)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Teamid">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Teamid">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Teamid">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.PagedRecords.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PagedRecords.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
  
   asp-route-pageIndex="@(Model.PagedRecords.CurrentPage - 1)"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-pageIndex="@(Model.PagedRecords.CurrentPage  + 1)"
   class="btn btn-primary @nextDisabled">
    Next
</a>
<dl class="row">
    <dt class="col-sm-2 text-sm-left">
        @Html.DisplayNameFor(model => model.PagedRecords.PageSize)
    </dt>
    <dd class="col-sm-2 text-sm-left">
        @Html.DisplayFor(model => model.PagedRecords.PageSize)
    </dd>
    <dt class="col-sm-2 text-sm-left">
        @Html.DisplayNameFor(model => model.PagedRecords.CurrentPage)
    </dt>
    <dd class="col-sm-2 text-sm-left">
        @Html.DisplayFor(model => model.PagedRecords.CurrentPage)
    </dd>
    <dt class="col-sm-2 text-sm-left">
        @Html.DisplayNameFor(model => model.PagedRecords.TotalPages)
    </dt>
    <dd class="col-sm-2 text-sm-left">
        @Html.DisplayFor(model => model.PagedRecords.TotalPages)
    </dd>
    <dt class="col-sm-2 text-sm-left">
        @Html.DisplayNameFor(model => model.PagedRecords.TotalRecords)
    </dt>
    <dd class="col-sm-2 text-sm-left">
        @Html.DisplayFor(model => model.PagedRecords.TotalRecords)
    </dd>
</dl>