@page
@model SCC.FantasyFootball.Pages.Stats.IndexModel

@{
    ViewData["Title"] = "Index";
    Model.IsCreator = User.IsInRole(SCC.FantasyFootball.DataAccess.SCCRoleConst.Contributor);
    Model.IsEditor = User.IsInRole(SCC.FantasyFootball.DataAccess.SCCRoleConst.Admin);
    var isAuthed = User.Identity.IsAuthenticated;
}
<h1>Player Stats</h1>

@if (Model.IsCreator)
{
<p>
    <a asp-page="Create">Create New</a>
</p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Passingattempts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Passingcompletions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Passingyards)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Passingtds)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Interceptions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Fumbles)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Receptions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Targets)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Drops)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Receivingyards)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Receivingtds)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Rushingattempts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Rushingyards)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Rushingtds)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Otheryards)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Othertds)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Twopointconversion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Points)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Rztarget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Rzrush)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Started)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Snaps)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Game)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Player)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagedRecords.Items[0].Team)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PagedRecords.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Passingattempts)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Passingcompletions)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Passingyards)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Passingtds)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Interceptions)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fumbles)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Receptions)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Targets)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Drops)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Receivingyards)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Receivingtds)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rushingattempts)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rushingyards)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rushingtds)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Otheryards)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Othertds)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Twopointconversion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Points)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rztarget)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rzrush)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Started)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Snaps)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Game.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Player.Firstname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Team.Conference)
                </td>
                <td>
                    @if (Model.IsEditor)
                    {
                        <span> @Html.ActionLink("Edit", "Edit", new { gameId = item.Gameid, playerId = item.Playerid, teamId = item.Teamid }) | </span>
                    }
                    @if (isAuthed)
                    {
                <span>  @Html.ActionLink("Details", "Details", new { gameId = item.Gameid, playerId = item.Playerid, teamId = item.Teamid })</span>
                    }
                  
                    @if (Model.IsEditor)
                    {
                        <span> | @Html.ActionLink("Delete", "Delete", new { gameId = item.Gameid, playerId = item.Playerid, teamId = item.Teamid })</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.PagedRecords.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PagedRecords.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-pageIndex="@(Model.PagedRecords.CurrentPage - 1)"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-pageIndex="@(Model.PagedRecords.CurrentPage  + 1)"
   class="btn btn-primary @nextDisabled">
    Next
</a>
<dl class="row">
    <dt class="col-sm-2 text-sm-left">
        @Html.DisplayNameFor(model => model.PagedRecords.PageSize)
    </dt>
    <dd class="col-sm-2 text-sm-left">
        @Html.DisplayFor(model => model.PagedRecords.PageSize)
    </dd>
    <dt class="col-sm-2 text-sm-left">
        @Html.DisplayNameFor(model => model.PagedRecords.CurrentPage)
    </dt>
    <dd class="col-sm-2 text-sm-left">
        @Html.DisplayFor(model => model.PagedRecords.CurrentPage)
    </dd>
    <dt class="col-sm-2 text-sm-left">
        @Html.DisplayNameFor(model => model.PagedRecords.TotalPages)
    </dt>
    <dd class="col-sm-2 text-sm-left">
        @Html.DisplayFor(model => model.PagedRecords.TotalPages)
    </dd>
    <dt class="col-sm-2 text-sm-left">
        @Html.DisplayNameFor(model => model.PagedRecords.TotalRecords)
    </dt>
    <dd class="col-sm-2 text-sm-left">
        @Html.DisplayFor(model => model.PagedRecords.TotalRecords)
    </dd>
